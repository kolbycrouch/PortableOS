## We need to read these files for this script to run stand-alone.
##

source ./make.config
export FINPREFIX=$(cat log.prefix)
export PKGDEFAULTNAME=$(cat log.pkgname)

## Copy all libraries needed by all binaries into the AppImage.
##

cd ${TOPDIR}
if [ -n "$TOOLCHAINBUILD" ]; then
        :
else
 ${RMCMD} tmpdir/tmp.libs* &&
 for libs in ${FINPREFIX}/bin/*; do
  ldd "$libs" >>tmpdir/tmp.libs 
 done
 for libs in ${FINPREFIX}/sbin/*; do
  ldd "$libs" >>tmpdir/tmp.libs 
 done
 ${CATCMD} tmpdir/tmp.libs | ${GREPCMD} -Po "(?<=>).*(?=\s*\\()" >tmpdir/tmp.libs2 &&
 ${SORTCMD} -u tmpdir/tmp.libs2 >tmpdir/tmp.libs3 &&
 ${MKDIRCMD} ${FINPREFIX}/lib &&
 ${CPCMD} -L $(cat tmpdir/tmp.libs3) ${FINPREFIX}/lib/ &>/dev/null | true 
fi

## Setup AppImage programs in AppImage directory.
##

${CPCMD} appimage/run.c tmpdir/run.c &>/dev/null | true &&
${CPCMD} appimage/AppRun.c tmpdir/AppRun.c &>/dev/null | true &&
${SEDCMD} -i -e "s:REPLACE:${PKGDEFAULTNAME}:g" tmpdir/run.c &&

## Use prebuilt binaries to minimize size.
##

${CPCMD} appimage/AppRun-${PLATFORM}-${UARCH} working.prefix/AppRun &&
${CPCMD} appimage/run-${PLATFORM}-${UARCH} working.prefix/run &&

## Strip binaries and shared libraries in the AppImage.
##

cd working.prefix &&
${STRIPCMD} -s ./bin/* &>/dev/null | true &&
${STRIPCMD} -s ./sbin/* &>/dev/null | true &&
${STRIPCMD} -s ./lib/lib*.so* &>/dev/null | true &&
${STRIPCMD} -s ./lib/*/lib*.so* &>/dev/null | true &&
${STRIPCMD} -s ./lib/*/*/lib*.so* &>/dev/null | true &&
${STRIPCMD} -s ./lib/*/*/*/lib*.so* &>/dev/null | true &&
${STRIPCMD} -s ./lib/*/*/*/*/lib*.so* &>/dev/null | true &&

## Remove useless stuff.
##

if [ -n "$TOOLCHAINBUILD" ]; then
	:
else
	${RMCMD} $(${CATCMD} ../prune/*) &>/dev/null | true
fi

cd ${TOPDIR}

${RMCMD} working.prefix/lib64

## Copy AppImage template files to the AppImage directory and finish the build.
##

if [ -n "$TOOLCHAINBUILD" ]; then
        ${CPCMD} appimage/setup.sh working.prefix/setup.sh
	${SEDCMD} -i -e "s:REPLACEPREFIX:${FINPREFIX}:g" working.prefix/setup.sh
	${SEDCMD} -i -e "s:REPLACEPKGNAME:${PKGDEFAULTNAME}:g" working.prefix/setup.sh
else
	${TOUCHCMD} working.prefix/setup.sh
fi

${CPCMD} appimage/template.desktop working.prefix/${PKGDEFAULTNAME}.desktop | true &&
${TOUCHCMD} working.prefix/null.png &&
${CHMODCMD} +x working.prefix/setup.sh &&
${ECHOCMD} "Package build complete!" &&
${ECHOCMD} "Please modify the .desktop and setup.sh files in working.prefix/, then run ./make.appimage"
