${FETCHCMD} https://ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz
VERSION=6.1
export SRCDIR=ncurses-6.1
${RMCMD} ${TOPDIR}/tmpdir/${SRCDIR}
${MKDIRCMD} ${TOPDIR}/tmpdir/${SRCDIR}
${TARCMD} -vxf ${TOPDIR}/sources/${SRCDIR}.tar.* -C ${TOPDIR}/tmpdir/${SRCDIR}/
../patcher
cd ${TOPDIR}/tmpdir/${SRCDIR}/${SRCDIR}
export CFLAGS="-fPIC"
${MKDIRCMD} wide-build
${MKDIRCMD} build

## Build wide support first.
##

cd wide-build
../configure --prefix=${FINPREFIX} --with-shared --without-debug --without-ada \
	--without-tests --enable-pc-files --with-pkg-config-libdir=${FINPREFIX}/lib/pkgconfig \
	--enable-widec --enable-ext-colors --with-manpage-symlinks --disable-database --with-fallbacks=linux,vt100 &&
${MKCMD} &&
${MKCMD} install &&

if [ "$STATICTOOLCHAIN" == "yes" ]; then
	${RMCMD} ../wide-build/*
	LDFLAGS=-static ../configure --prefix=${FINPREFIX} --without-debug --without-ada \
        	--without-tests --enable-pc-files --with-pkg-config-libdir=${FINPREFIX}/lib/pkgconfig \
        	--enable-widec --enable-ext-colors --with-manpage-symlinks --disable-database --with-fallbacks=linux,vt100 &&
	${MKCMD}
	${MKCMD} install
fi
 
## Make non-wide libraries links to wide ones.
##

for lib in curses ncurses form panel menu; do
		${RMCMD} ${FINPREFIX}/lib/lib${lib}.so
		${ECHOCMD} "INPUT(-l${lib}w)" >${FINPREFIX}/lib/lib${lib}.so
		${CHMODCMD} 755 ${FINPREFIX}/lib/lib${lib}.so
		${LNCMD} -sf lib${lib}w.a ${FINPREFIX}/lib/lib${lib}.a
done
${LNCMD} -sf libncurses++w.a ${FINPREFIX}/lib/libncurses++.a

## Some packages need -lcurses.
##

	${RMCMD} ${FINPREFIX}/lib/libcursesw.so
	${ECHOCMD} "INPUT(-lncursesw)" >${FINPREFIX}/lib/libcursesw.so
	${CHMODCMD} 755 ${FINPREFIX}/lib/libcursesw.so
	${LNCMD} -sf libncurses.so ${FINPREFIX}/lib/libcurses.so
	${LNCMD} -sf libncursesw.a ${FINPREFIX}/lib/libcursesw.a
	${LNCMD} -sf libncurses.a ${FINPREFIX}/lib/libcurses.a

## Change back to top directory.
##

cd ../

## Build normal now.
##

cd build
../configure --prefix=${FINPREFIX} --host=$MACHARCH --target=$MACHARCH \
	--build=$MACHARCH --with-shared --without-debug --without-ada \
	--without-tests --enable-pc-files --with-pkg-config-libdir=${FINPREFIX}/lib/pkgconfig \ 
	--disable-database --with-fallbacks=linux,vt100
${MKCMD} 

if [ "$STATICTOOLCHAIN" == "yes" ]; then
	${RMCMD} ../build/*
	LDFLAGS=-static ../configure --prefix=${FINPREFIX} --host=$MACHARCH --target=$MACHARCH \
        	--build=$MACHARCH --with-shared --without-debug --without-ada \
        	--without-tests --enable-pc-files --with-pkg-config-libdir=${FINPREFIX}/lib/pkgconfig \
		--disable-database --with-fallbacks=linux,vt100
	${MKCMD}
fi

## non-wide compat.
##

install -Dm755 lib/libncurses.so.${VERSION} \
		${FINPREFIX}/lib/libncurses.so.${VERSION}

## Version compat symlinks.
##

for f in ncurses form panel menu; do
		${LNCMD} -sfr ${FINPREFIX}/lib/lib${f}w.so.6 \
			${FINPREFIX}/lib/lib${f}w.so.5
		${LNCMD} -sfr ${FINPREFIX}/lib/lib${f}.so.6 \
                        ${FINPREFIX}/lib/lib${f}.so.5
done

## libtinfo symlinks.
##

${LNCMD} -sf ${FINPREFIX}/lib/libncursesw.so.6 ${FINPREFIX}/lib/libtinfo.so.6 
${LNCMD} -sf ${FINPREFIX}/lib/libncursesw.so.6 ${FINPREFIX}/lib/libtinfo.so.5
${LNCMD} -sf ${FINPREFIX}/lib/libncursesw.a ${FINPREFIX}/lib/libtinfo.a

## ncurses5-config symlinks.
##

${LNCMD} -sf ${FINPREFIX}/bin/ncursesw6-config ${FINPREFIX}/bin/ncursesw5-config &&
${LNCMD} -sf ${FINPREFIX}/bin/ncursesw6-config ${FINPREFIX}/bin/ncurses5-config &&

## include compat.
##

${CPCMD} ${TOPDIR}/working.prefix/include/ncursesw/* ${TOPDIR}/working.prefix/include/
